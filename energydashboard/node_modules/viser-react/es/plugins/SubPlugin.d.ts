import * as PropTypes from 'prop-types';
import * as React from 'react';
import { ISlider } from 'viser';
declare class Props {
    container?: string;
}
declare class SubPlugin<T = {}> extends React.Component<Props & T, any> {
    static childContextTypes: {
        container: PropTypes.Requireable<string>;
    };
    static contextTypes: {
        centralizedUpdates: PropTypes.Requireable<(...args: any[]) => any>;
    };
    displayName: string;
    constructor(props: Props & T);
    getChildContext(): {
        container: any;
    };
    componentDidUpdate(): void;
    componentDidMount(): void;
    render(): React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)> | null) | (new (props: any) => React.Component<any, any, any>)>;
}
export declare class Slider extends SubPlugin<ISlider> {
    displayName: string;
}
export {};
